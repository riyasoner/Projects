{"version":3,"file":"static/js/123.3dc630b5.chunk.js","mappings":"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","sources":["Components/Account/AddNewAccount.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport useApi from \"../../hooks/useApi\";\nimport endPoints from \"../../api/endPoints\";\n\nconst AddNewAccount = () => {\n    const { post, get } = useApi();\n    const [message, setMessage] = useState({ type: \"\", text: \"\" });\n    const [users, setUsers] = useState([]);\n    const [errors, setErrors] = useState({});\n\n    const [formData, setFormData] = useState({\n        name: \"\",\n        description: \"\",\n        account_type: \"PERSONNEL\",\n        unit: \"inr\",\n        bookId: localStorage.getItem(\"bookId\") || \"\",\n        userId: \"\"\n    });\n    const userId = localStorage.getItem(\"userId\")\n    const handleChange = (e) => {\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n        setErrors({ ...errors, [e.target.name]: \"\" }); // clear error when typing\n    };\n\n    const validate = () => {\n        const newErrors = {};\n        if (!formData.name.trim()) newErrors.name = \"Name is required\";\n        if (!formData.description.trim()) newErrors.description = \"Description is required\";\n        if (!formData.userId) newErrors.userId = \"Owner selection is required\";\n        return newErrors;\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const newErrors = validate();\n        setErrors(newErrors);\n\n        if (Object.keys(newErrors).length > 0) return;\n\n        setMessage({ type: \"\", text: \"\" });\n\n        const currentBookId = localStorage.getItem(\"bookId\");\n        const dataToSend = {\n            ...formData,\n            bookId: currentBookId,\n            userId: Number(formData.userId),\n        };\n\n        try {\n            const response = await post(endPoints.addAccount, dataToSend);\n            if (response?.data) {\n                setMessage({ type: \"success\", text: response.message || \"Account added successfully!\" });\n                setFormData({\n                    name: \"\",\n                    description: \"\",\n                    account_type: \"PERSONNEL\",\n                    unit: \"inr\",\n                    bookId: currentBookId || \"\",\n                    userId: \"\"\n                });\n                setErrors({});\n            } else {\n                setMessage({ type: \"error\", text: response.message || \"Failed to add account. Please try again.\" });\n            }\n        } catch (error) {\n            console.error(error);\n            setMessage({ type: \"error\", text: error?.message || \"An unexpected error occurred.\" });\n        }\n    };\n\n    useEffect(() => {\n        const fetchUsers = async () => {\n            try {\n                const response = await get(`${endPoints.getAllUser}?createdByUserId=${userId}`);\n                setUsers(Array.isArray(response.data) ? response.data : []);\n            } catch (error) {\n                console.error(\"Error fetching users:\", error);\n                setUsers([]);\n            }\n        };\n        fetchUsers();\n    }, []);\n\n    return (\n        <div className=\"container mt-5\" style={{ maxWidth: \"1000px\" }}>\n            <div className=\"card mx-auto\">\n                <div className=\"card-header d-flex align-items-center\" style={{ backgroundColor: \"#419EB9\" }}>\n                    <h6 className=\"text-white\">NEW ACCOUNT</h6>\n                </div>\n\n                {message.text && (\n                    <div className={`alert ${message.type === \"success\" ? \"alert-success\" : \"alert-danger\"} m-3`}>\n                        {message.text}\n                    </div>\n                )}\n\n                <div className=\"card-body\">\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"mb-3\">\n                            <input\n                                type=\"text\"\n                                className={`form-control ${errors.name ? \"is-invalid\" : \"\"}`}\n                                name=\"name\"\n                                value={formData.name}\n                                onChange={handleChange}\n                                placeholder=\"Name\"\n                                style={{ border: \"none\" }}\n                            />\n                            {errors.name && <div className=\"invalid-feedback\">{errors.name}</div>}\n                        </div>\n                        <hr />\n                        <div className=\"mb-3\">\n                            <input\n                                type=\"text\"\n                                className={`form-control ${errors.description ? \"is-invalid\" : \"\"}`}\n                                name=\"description\"\n                                value={formData.description}\n                                onChange={handleChange}\n                                placeholder=\"Description\"\n                                style={{ border: \"none\" }}\n                            />\n                            {errors.description && <div className=\"invalid-feedback\">{errors.description}</div>}\n                        </div>\n                        <hr />\n                        <div className=\"mb-3 row\">\n                            <div className=\"col-md-6 mb-3\">\n                                <select\n                                    className=\"form-select\"\n                                    name=\"account_type\"\n                                    value={formData.account_type}\n                                    onChange={handleChange}\n                                >\n                                    <option value=\"PAYABLE_RECEIVABLE\">PAYABLE/RECEIVABLE</option>\n                                    <option value=\"BANK\">BANK</option>\n                                    <option value=\"CREDIT_CARD\">CREDIT CARD</option>\n                                    <option value=\"CASH\">CASH</option>\n                                    <option value=\"PERSONNEL\">PERSONNEL</option>\n                                    <option value=\"PRODUCT\">PRODUCT</option>\n                                    <option value=\"SAVINGS\">SAVINGS</option>\n                                    <option value=\"NONE\">NONE</option>\n                                </select>\n                            </div>\n                            <div className=\"col-md-6 mb-3\">\n                                <select\n                                    className=\"form-select\"\n                                    name=\"unit\"\n                                    value={formData.unit}\n                                    onChange={handleChange}\n                                >\n                                    <option value=\"usd\">$ United States Dollar (USD)</option>\n                                    <option value=\"eur\">€ Euro (EUR)</option>\n                                    <option value=\"gbp\">£ Pound Sterling (GBP)</option>\n                                    <option value=\"inr\">₹ Indian Rupee (INR)</option>\n                                    <option value=\"jpy\">¥ Japanese Yen (JPY)</option>\n                                    <option value=\"aud\">$ Australian Dollar (AUD)</option>\n                                    <option value=\"cad\">$ Canadian Dollar (CAD)</option>\n                                    <option value=\"chf\">CHF Swiss Franc (CHF)</option>\n                                    <option value=\"cny\">¥ Chinese Yuan (CNY)</option>\n                                    <option value=\"ron\">L Romanian Leu (RON)</option>\n                                    <option value=\"zar\">R South African Rand (ZAR)</option>\n                                    <option value=\"sgd\">$ Singapore Dollar (SGD)</option>\n                                    <option value=\"hkd\">$ Hong Kong Dollar (HKD)</option>\n                                    <option value=\"nzd\">$ New Zealand Dollar (NZD)</option>\n                                    <option value=\"brl\">R$ Brazilian Real (BRL)</option>\n                                    <option value=\"sek\">kr Swedish Krona (SEK)</option>\n                                    <option value=\"nok\">kr Norwegian Krone (NOK)</option>\n                                    <option value=\"dkk\">kr Danish Krone (DKK)</option>\n                                    <option value=\"mxn\">$ Mexican Peso (MXN)</option>\n                                    <option value=\"rub\">₽ Russian Ruble (RUB)</option>\n                                </select>\n                            </div>\n                        </div>\n\n                        <div className=\"mb-3\">\n                            <select\n                                className={`form-select ${errors.userId ? \"is-invalid\" : \"\"}`}\n                                name=\"userId\"\n                                value={formData.userId}\n                                onChange={handleChange}\n                            >\n                                <option value=\"\">-- Select Account Owner --</option>\n                                {users\n                                    .filter(user => user.user_type !== \"super_admin\")\n                                    .map(user => (\n                                        <option key={user.id} value={user.id}>\n                                            {user.name} ({user.email_id})\n                                        </option>\n                                    ))}\n                            </select>\n                            {errors.userId && <div className=\"invalid-feedback\">{errors.userId}</div>}\n                        </div>\n\n                        <hr />\n                        <div className=\"d-flex justify-content-end mt-3\">\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-lg\"\n                                style={{ backgroundColor: \"#419EB9\", color: \"white\" }}\n                            >\n                                Save\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AddNewAccount;\n"],"names":["AddNewAccount","post","get","useApi","message","setMessage","useState","type","text","users","setUsers","errors","setErrors","formData","setFormData","name","description","account_type","unit","bookId","localStorage","getItem","userId","handleChange","e","_objectSpread","target","value","useEffect","async","response","concat","endPoints","getAllUser","Array","isArray","data","error","console","fetchUsers","_jsx","className","style","maxWidth","children","_jsxs","backgroundColor","onSubmit","preventDefault","newErrors","validate","trim","Object","keys","length","currentBookId","dataToSend","Number","addAccount","onChange","placeholder","border","filter","user","user_type","map","id","email_id","color"],"sourceRoot":""}