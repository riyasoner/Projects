{"version":3,"file":"static/js/274.f5c726ee.chunk.js","mappings":"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","sources":["Components/Settings/Settings.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport endPoints from \"../../api/endPoints\";\nimport useApi from \"../../hooks/useApi\";\n\nconst Settings = () => {\n    const { get, patch } = useApi();\n    const [settings, setSettings] = useState({\n        timezone: \"GMT\",\n        email_id: \"\",\n        phone_no: \"\",\n        name: \"\",\n    });\n    const [currentPassword, setCurrentPassword] = useState(\"\");\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n    const [message, setMessage] = useState(\"\"); \n\n    // Get userId from localStorage\n    const userId = localStorage.getItem(\"userId\");\n\n    // Fetch user info\n    useEffect(() => {\n        if (userId) {\n            const fetchSettings = async () => {\n                try {\n                    const response = await get(`${endPoints.getUserInfo}?id=${userId}`);\n                    if (response.data[0]) {\n                        setSettings({\n                            timezone: response.data[0].timezone || \"GMT\",\n                            email_id: response.data[0].email_id || \"\",\n                            phone_no: response.data[0].phone_no || \"\",\n                            name: response.data[0].name || \"\",\n                        });\n                    }\n                } catch (error) {\n                    console.error(\"Error fetching settings:\", error);\n                    setMessage(\"Failed to fetch user settings!\");\n                }\n            };\n\n            fetchSettings();\n        }\n    }, [userId, get]);\n\n    // Handle update name\n    const handleNameUpdate = async () => {\n        setIsLoading(true);\n        try {\n            const response = await patch(endPoints.updateUserInfoAndPass, {\n                id: userId,\n                name: settings.name,\n            });\n\n            if (response.status) {\n                setMessage(response.message||\"Name updated successfully!\");\n                localStorage.setItem(\"name\", settings.name);\n            }\n        } catch (error) {\n            console.error(\"Error updating name:\", error);\n            setMessage(error.message||\"Failed to update name!\");\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    // Handle update password\n    const handlePasswordUpdate = async () => {\n        setIsLoading(true);\n\n        const data = {\n            id: userId,\n            current_password: currentPassword,\n            new_password: newPassword,\n            confirm_new_password: confirmNewPassword,\n        };\n\n        try {\n            const response = await patch(endPoints.updateUserInfoAndPass, data);\n\n            if (response.status) {\n                setMessage(response.message||\"Password updated successfully!\");\n            }\n        } catch (error) {\n            console.error(\"Error updating password:\", error);\n            setMessage(error.message||\"Failed to update password!\");\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"container mt-5\">\n            {message && (\n                <div className=\"mt-3 alert alert-info\">\n                    {message}\n                </div>\n            )}\n            <div className=\"card\" style={{ maxWidth: \"1000px\" }}>\n\n                {/* Card Header */}\n                <div className=\"card-header d-flex align-items-center\" style={{ backgroundColor: \"#419EB9\" }}>\n                    <span className=\"text-white\">\n                        <i className=\"bi bi-gear\"></i> Settings\n                    </span>\n                </div>\n                {/* Display Message */}\n\n\n\n                {/* Card Body */}\n                <div className=\"card-body\">\n                    {/* Timezone Field */}\n                    <div className=\"mb-3 row\">\n                        <label htmlFor=\"timezone\" className=\"col-md-2 col-form-label text-muted\">\n                            Timezone\n                        </label>\n                        <div className=\"col-md-8\">\n                            <select\n                                id=\"timezone\"\n                                className=\"form-select\"\n                                name=\"timezone\"\n                                value={settings.timezone}\n                                onChange={(e) => setSettings({ ...settings, timezone: e.target.value })}\n                            >\n                                <option value=\"GMT\">GMT</option>\n                                <option value=\"UTC\">UTC</option>\n                                <option value=\"PST\">PST</option>\n                                <option value=\"EST\">EST</option>\n                            </select>\n                        </div>\n                    </div>\n                    <hr />\n\n                    {/* Email Field */}\n                    <div className=\"mb-3 row\">\n                        <label htmlFor=\"email\" className=\"col-md-2 col-form-label text-muted\">\n                            Email\n                        </label>\n                        <div className=\"col-md-8\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                id=\"email\"\n                                name=\"email\"\n                                value={settings.email_id}\n                                disabled\n                            />\n                        </div>\n                    </div>\n                    <hr />\n\n                    {/* Phone Field */}\n                    <div className=\"mb-3 row\">\n                        <label htmlFor=\"phone\" className=\"col-md-2 col-form-label text-muted\">\n                            Phone\n                        </label>\n                        <div className=\"col-md-8\">\n                            <input\n                                type=\"tel\"\n                                className=\"form-control\"\n                                id=\"phone\"\n                                name=\"phone\"\n                                value={settings.phone_no}\n                                disabled\n                            />\n                        </div>\n                    </div>\n                    <hr />\n\n                    {/* Name Field */}\n                    <div className=\"mb-3 row\">\n                    <div className=\"mb-3 p-2\" style={{ backgroundColor: \"#E5EAEC\", borderRadius: \"5px\" }}>\n                            <span className=\"text-muted\">UserInfo</span>\n                        </div>\n\n                        <label htmlFor=\"name\" className=\"col-md-2 col-form-label text-muted\">\n                            Name\n                        </label>\n                        <div className=\"col-md-8\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"name\"\n                                name=\"name\"\n                                value={settings.name}\n                                onChange={(e) => setSettings({ ...settings, name: e.target.value })}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"d-flex justify-content-start mt-3\">\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-lg\"\n                            style={{ backgroundColor: \"#419EB9\", color: \"white\" }}\n                            onClick={handleNameUpdate}\n                            disabled={isLoading}\n                        >\n                            {isLoading ? \"Updating...\" : \"Update \"}\n                        </button>\n                    </div>\n                    <hr />\n\n                    {/* Password Section */}\n                    <div>\n                        <div className=\"mb-3 p-2\" style={{ backgroundColor: \"#E5EAEC\", borderRadius: \"5px\" }}>\n                            <span className=\"text-muted\">Password</span>\n                        </div>\n                        <div className=\"row mt-2\">\n                            <div className=\"col-md-12\">\n                                <input\n                                    type=\"password\"\n                                    className=\"form-control mb-2\"\n                                    id=\"currentPassword\"\n                                    name=\"currentPassword\"\n                                    placeholder=\"Current Password\"\n                                    value={currentPassword}\n                                    onChange={(e) => setCurrentPassword(e.target.value)}\n                                />\n                            </div>\n                            <div className=\"col-md-12\">\n                                <input\n                                    type=\"password\"\n                                    className=\"form-control mb-2\"\n                                    id=\"newPassword\"\n                                    name=\"newPassword\"\n                                    placeholder=\"New Password\"\n                                    value={newPassword}\n                                    onChange={(e) => setNewPassword(e.target.value)}\n                                />\n                            </div>\n                            <div className=\"col-md-12\">\n                                <input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    id=\"confirmPassword\"\n                                    name=\"confirmPassword\"\n                                    placeholder=\"Confirm New Password\"\n                                    value={confirmNewPassword}\n                                    onChange={(e) => setConfirmNewPassword(e.target.value)}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"d-flex justify-content-start mt-3\">\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-lg\"\n                            style={{ backgroundColor: \"#419EB9\", color: \"white\" }}\n                            onClick={handlePasswordUpdate}\n                            disabled={isLoading}\n                        >\n                            {isLoading ? \"Updating...\" : \"Update Password\"}\n                        </button>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Settings;\n"],"names":["Settings","get","patch","useApi","settings","setSettings","useState","timezone","email_id","phone_no","name","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","isLoading","setIsLoading","message","setMessage","userId","localStorage","getItem","useEffect","async","response","concat","endPoints","getUserInfo","data","error","console","fetchSettings","_jsxs","className","children","_jsx","style","maxWidth","backgroundColor","htmlFor","id","value","onChange","e","_objectSpread","target","type","disabled","borderRadius","color","onClick","updateUserInfoAndPass","status","setItem","placeholder","current_password","new_password","confirm_new_password"],"sourceRoot":""}